#include <iostream>
#include <fstream>
#include <string>

using namespace std;

int main(int argc, char* argv[] ) {

    //write/open the initial txt file for configuration
    std::ofstream file;
    file.open("config.txt");

    //the first argument
    if (static_cast<string>(argv[1]) == "init") {

        //string declaration
        string name, email, password, time;

        //receive user input
        cout << "What is your full name? " << endl;
        getline(cin, name);
        cout << "What is your email address? " << endl;
        getline(cin, email);
        cout << "what is your password? " << endl;
        getline(cin, password);
        cout << "What timezone do you live in?" << endl;
        getline(cin, time);

        //write answers to config file.
        file << name << endl;
        file << email << endl;
        file << password << endl;
        file << time << endl;

        //close file
        file.close();
        cout << "File closed.";
    }

    if (static_cast<string>(argv[1]) == "edit") {

        ofstream file;
        string name, email, password, time;

        //open file for input/output
        file.open("config.txt");

        if (static_cast<string>(argv[2]) == "name") {
            cout << "What would you like to change the field to? " << endl;
            getline(cin, name);
        }
        if (static_cast<string>(argv[2]) == "email") {
            cout << "What would you like to change the field to? " << endl;
            getline(cin, name);
        }
        if (static_cast<string>(argv[2]) == "password") {
            cout << "What would you like to change the field to? " << endl;
            getline(cin, name);
        }
        if (static_cast<string>(argv[2]) == "time") {
            cout << "What would you like to change the field to? " << endl;
            getline(cin, name);
        }

        //write changes to config file.
        file << name << endl;
        file << email << endl;
        file << password << endl;
        file << time << endl;

        //close the file
        file.close();
        cout << "File closed.";
    }
    return 0;
}
